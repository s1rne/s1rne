import { resumeData } from "@/data/resume-data";

export function generateResumeMarkdown(): string {
  const formatSkills = (skills: typeof resumeData.skills) => {
    const categories = {
      frontend: skills.filter(s => s.category === 'frontend'),
      backend: skills.filter(s => s.category === 'backend'),
      database: skills.filter(s => s.category === 'database'),
      devops: skills.filter(s => s.category === 'devops'),
      tools: skills.filter(s => s.category === 'tools'),
      other: skills.filter(s => s.category === 'other')
    };

    let result = '';
    
    if (categories.frontend.length > 0) {
      result += '### Frontend\n';
      categories.frontend.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    if (categories.backend.length > 0) {
      result += '### Backend\n';
      categories.backend.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    if (categories.database.length > 0) {
      result += '### –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n';
      categories.database.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    if (categories.devops.length > 0) {
      result += '### DevOps & –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n';
      categories.devops.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    if (categories.tools.length > 0) {
      result += '### –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n';
      categories.tools.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    if (categories.other.length > 0) {
      result += '### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ\n';
      categories.other.forEach(skill => {
        result += `- **${skill.name}** - ${getSkillLevel(skill.level)}\n`;
      });
      result += '\n';
    }

    return result;
  };

  const getSkillLevel = (level: number): string => {
    if (level >= 90) return '–≠–∫—Å–ø–µ—Ä—Ç';
    if (level >= 80) return '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π';
    if (level >= 60) return '–°—Ä–µ–¥–Ω–∏–π';
    return '–ù–∞—á–∏–Ω–∞—é—â–∏–π';
  };

  const formatExperience = (exp: typeof resumeData.experience[0]) => {
    return `### ${exp.title}
**${exp.company}** | ${exp.period}

${exp.description}

**–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:**
${exp.responsibilities.map(r => `- ${r}`).join('\n')}

**–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**
${exp.achievements.map(a => `- ${a}`).join('\n')}

**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** ${exp.technologies.join(', ')}

---`;
  };

  const formatProject = (project: typeof resumeData.projects[0]) => {
    const statusMap = {
      'completed': '–ó–∞–≤–µ—Ä—à—ë–Ω',
      'in-progress': '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
      'planned': '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è'
    };

    let result = `### ${project.name}
**${project.role}**

${project.description}

**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** ${project.technologies.join(', ')}

**–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:** ${project.results}

**–°—Ç–∞—Ç—É—Å:** ${statusMap[project.status]}`;

    if (project.links?.demo || project.links?.github || project.links?.website) {
      result += '\n\n**–°—Å—ã–ª–∫–∏:**';
      if (project.links.demo) result += `\n- –î–µ–º–æ: ${project.links.demo}`;
      if (project.links.github) result += `\n- GitHub: ${project.links.github}`;
      if (project.links.website) result += `\n- –°–∞–π—Ç: ${project.links.website}`;
    }

    result += '\n\n---';
    return result;
  };

  const formatEducation = (edu: typeof resumeData.education[0]) => {
    let result = `### ${edu.institution}
**${edu.degree}** | ${edu.period}

**–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:** ${edu.field}`;

    if (edu.achievements && edu.achievements.length > 0) {
      result += '\n\n**–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**';
      edu.achievements.forEach(achievement => {
        result += `\n- ${achievement}`;
      });
    }

    return result;
  };

  const formatCertification = (cert: typeof resumeData.certifications[0]) => {
    let result = `- **${cert.name}** - ${cert.issuer} (${cert.date})`;
    if (cert.description) {
      result += `\n  ${cert.description}`;
    }
    return result;
  };

  const formatAchievement = (achievement: typeof resumeData.achievements[0]) => {
    return `- **${achievement.title}** - ${achievement.description} (${achievement.date})`;
  };

  const formatLanguage = (lang: typeof resumeData.languages[0]) => {
    return `- **${lang.name}** - ${lang.level}${lang.native ? ' (–†–æ–¥–Ω–æ–π)' : ''}`;
  };

  return `# ${resumeData.personal.name}
## ${resumeData.personal.position}

---

**üìß Email:** ${resumeData.personal.email}  
**üì± –¢–µ–ª–µ—Ñ–æ–Ω:** ${resumeData.personal.phone}  
**üìç –õ–æ–∫–∞—Ü–∏—è:** ${resumeData.personal.location}  
${resumeData.personal.telegram ? `**üí¨ Telegram:** ${resumeData.personal.telegram}` : ''}  
${resumeData.personal.github ? `**üêô GitHub:** ${resumeData.personal.github}` : ''}  

---

## üéØ –û —Å–µ–±–µ

${resumeData.summary}

**–ö–ª—é—á–µ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞:**
${resumeData.softSkills.map(skill => `- ${skill.name}`).join('\n')}

---

## üíª –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏

${formatSkills(resumeData.skills)}

---

## üíº –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã

${resumeData.experience.map(formatExperience).join('\n\n')}

---

## üöÄ –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã

${resumeData.projects.filter(p => p.featured).map(formatProject).join('\n\n')}

---

## üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ

${resumeData.education.map(formatEducation).join('\n\n')}

---

## üèÜ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è

### –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
${resumeData.certifications.map(formatCertification).join('\n')}

### –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
${resumeData.achievements.map(formatAchievement).join('\n')}

---

## üåç –Ø–∑—ã–∫–∏

${resumeData.languages.map(formatLanguage).join('\n')}

---

## üé® –ò–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ö–æ–±–±–∏

${resumeData.interests.map(interest => `- ${interest}`).join('\n')}

---

## üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

- **–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:** –£–¥–∞–ª—ë–Ω–Ω–æ/–∫–æ–≤–æ—Ä–∫–∏–Ω–≥
- **–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞:** –õ—é–±–ª—é —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –ª—é–¥—å–º–∏
- **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** –£–≤–ª–µ–∫–∞—é—Å—å –Ω–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º
- **–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –æ–ø—ã—Ç:** –ò–º–µ—é –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏

---

*–†–µ–∑—é–º–µ —Å–æ–∑–¥–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª—ë–≥–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.*`;
}

export function downloadResumePDF() {
  const markdown = generateResumeMarkdown();
  
  // –°–æ–∑–¥–∞–µ–º blob —Å markdown —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
  const blob = new Blob([markdown], { type: 'text/markdown' });
  const url = URL.createObjectURL(blob);
  
  // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  const link = document.createElement('a');
  link.href = url;
  link.download = `resume-${resumeData.personal.name.replace(/\s+/g, '-').toLowerCase()}.md`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ DOM, –∫–ª–∏–∫–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  
  // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å
  URL.revokeObjectURL(url);
}

export function copyResumeToClipboard() {
  const markdown = generateResumeMarkdown();
  navigator.clipboard.writeText(markdown).then(() => {
    alert('–†–µ–∑—é–º–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  });
}
